# Generated by Django 5.1.7 on 2025-06-12 14:21

import account.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_camera', models.PositiveIntegerField(default=1)),
                ('prezzo_per_notte', models.DecimalField(decimal_places=2, default=50.0, max_digits=7)),
                ('immagine', models.ImageField(blank=True, null=True, upload_to=account.models.Camera.camera_image_upload_path)),
                ('disponibilita', models.BooleanField(default=True)),
                ('numero_persone', models.PositiveIntegerField()),
                ('descrizione', models.TextField(blank=True)),
                ('bagno_privato', models.BooleanField(default=True)),
                ('aria_condizionata', models.BooleanField(default=False)),
                ('wifi', models.BooleanField(default=True)),
                ('tv', models.BooleanField(default=False)),
                ('balcone', models.BooleanField(default=False)),
                ('vista', models.CharField(blank=True, help_text='Es: mare, montagna, città', max_length=100)),
                ('letto_matrimoniale', models.BooleanField(default=False)),
                ('letti_singoli', models.PositiveIntegerField(default=0)),
                ('accessibile_disabili', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('user_type', models.CharField(choices=[('ADMIN', 'Admin'), ('GESTORE', 'Gestore'), ('CLIENTE', 'Cliente')], default='CLIENTE', help_text="Specifica se l'utente è un gestore o un cliente", max_length=10)),
                ('nome', models.CharField(blank=True, max_length=100)),
                ('cognome', models.CharField(blank=True, max_length=100)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', account.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CameraImmagine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('immagine', models.ImageField(upload_to='camere/')),
                ('didascalia', models.CharField(blank=True, max_length=255)),
                ('camera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='immagini', to='account.camera')),
            ],
        ),
        migrations.CreateModel(
            name='ClienteProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indirizzo', models.CharField(blank=True, max_length=250)),
                ('citta', models.CharField(blank=True, max_length=100)),
                ('data_nascita', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cliente_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GestoreProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partita_iva', models.CharField(blank=True, max_length=20)),
                ('denominazione_sociale', models.CharField(blank=True, max_length=200)),
                ('indirizzo_sede', models.CharField(blank=True, max_length=250)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gestore_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Struttura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('descrizione', models.TextField()),
                ('indirizzo', models.CharField(max_length=250)),
                ('immagine', models.ImageField(blank=True, null=True, upload_to=account.models.Struttura.struttura_image_upload_path)),
                ('disponibilita', models.BooleanField(default=True)),
                ('tipologia', models.CharField(choices=[('hotel', 'Hotel'), ('b&b', 'Bed & Breakfast'), ('casa_vacanze', 'Casa Vacanze'), ('ostello', 'Ostello')], default='hotel', max_length=30)),
                ('parcheggio', models.BooleanField(default=False)),
                ('piscina', models.BooleanField(default=False)),
                ('ristorante', models.BooleanField(default=False)),
                ('animali_ammessi', models.BooleanField(default=False)),
                ('citta', models.CharField(blank=True, max_length=100)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('numero_camere', models.PositiveIntegerField(default=1)),
                ('gestore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strutture', to='account.gestoreprofile')),
            ],
        ),
        migrations.AddField(
            model_name='camera',
            name='struttura',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='camere', to='account.struttura'),
        ),
    ]
